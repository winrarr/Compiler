(VOID,
  LetExp([
  | TypeDec[
  |   (any,
  |   | NAME any = RECORD {any: INT})],
  | VarDec(buffer,true,STRING,
  |   (STRING,
  |   | CallExp(getchar,[]))),
  | FunctionDec[
  |   (readint,[
  |   | (any,true)],
  |   | INT,
  |   | (INT,
  |   |   LetExp([
  |   |   | VarDec(i,true,INT,
  |   |   |   (INT,
  |   |   |   | IntExp(0))),
  |   |   | FunctionDec[
  |   |   |   (isdigit,[
  |   |   |   | (s,true)],
  |   |   |   | INT,
  |   |   |   | (INT,
  |   |   |   |   IfExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   OpExp(GeOp,
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   SimpleVar(buffer))))])),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   StringExp("0"))])))),
  |   |   |   |   | (INT,
  |   |   |   |   |   OpExp(LeOp,
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   SimpleVar(buffer))))])),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   StringExp("9"))])))),
  |   |   |   |   | (INT,
  |   |   |   |   |   IntExp(0))))),
  |   |   |   (skipto,[],
  |   |   |   | VOID,
  |   |   |   | (VOID,
  |   |   |   |   WhileExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   IfExp(
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   OpExp(EqOp,
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   SimpleVar(buffer)))),
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   StringExp(" ")))),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   IntExp(1)),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   OpExp(EqOp,
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   SimpleVar(buffer)))),
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   StringExp("\n")))))),
  |   |   |   |   | (VOID,
  |   |   |   |   |   AssignExp(
  |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   SimpleVar(buffer)),
  |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   CallExp(getchar,[])))))))]],
  |   |   | (INT,
  |   |   |   SeqExp[
  |   |   |   | (VOID,
  |   |   |   |   CallExp(skipto,[])),
  |   |   |   | (VOID,
  |   |   |   |   AssignExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   FieldVar(
  |   |   |   |   |   | (NAME any = RECORD {any: INT},
  |   |   |   |   |   |   SimpleVar(any)),
  |   |   |   |   |   | any)),
  |   |   |   |   | (INT,
  |   |   |   |   |   CallExp(isdigit,[
  |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   SimpleVar(buffer))))])))),
  |   |   |   | (VOID,
  |   |   |   |   WhileExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   CallExp(isdigit,[
  |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   SimpleVar(buffer))))])),
  |   |   |   |   | (VOID,
  |   |   |   |   |   SeqExp[
  |   |   |   |   |   | (VOID,
  |   |   |   |   |   |   AssignExp(
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   SimpleVar(i)),
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   OpExp(MinusOp,
  |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   OpExp(PlusOp,
  |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   OpExp(TimesOp,
  |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   IntExp(10)))),
  |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   |   |   |   SimpleVar(buffer))))])))),
  |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   |   StringExp("0"))])))))),
  |   |   |   |   |   | (VOID,
  |   |   |   |   |   |   AssignExp(
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   SimpleVar(buffer)),
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   CallExp(getchar,[]))))]))),
  |   |   |   | (INT,
  |   |   |   |   VarExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   SimpleVar(i))))]))))],
  | TypeDec[
  |   (list,
  |   | NAME list = RECORD {first: INT, rest: NAME list})],
  | FunctionDec[
  |   (readlist,[],
  |   | NAME list = RECORD {first: INT, rest: NAME list},
  |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   LetExp([
  |   |   | VarDec(any,true,NAME any = RECORD {any: INT},
  |   |   |   (NAME any = RECORD {any: INT},
  |   |   |   | RecordExp([
  |   |   |   |   (any,
  |   |   |   |   | (INT,
  |   |   |   |   |   IntExp(0)))]))),
  |   |   | VarDec(i,true,INT,
  |   |   |   (INT,
  |   |   |   | CallExp(readint,[
  |   |   |   |   (NAME any = RECORD {any: INT},
  |   |   |   |   | VarExp(
  |   |   |   |   |   (NAME any = RECORD {any: INT},
  |   |   |   |   |   | SimpleVar(any))))])))],
  |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   IfExp(
  |   |   |   | (INT,
  |   |   |   |   VarExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   FieldVar(
  |   |   |   |   |   | (NAME any = RECORD {any: INT},
  |   |   |   |   |   |   SimpleVar(any)),
  |   |   |   |   |   | any)))),
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   RecordExp([
  |   |   |   |   | (first,
  |   |   |   |   |   (INT,
  |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   (INT,
  |   |   |   |   |   |   | SimpleVar(i))))),
  |   |   |   |   | (rest,
  |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   | CallExp(readlist,[])))])),
  |   |   |   | (NIL,
  |   |   |   |   NilExp)))))),
  |   (merge,[
  |   | (a,true),
  |   | (b,true)],
  |   | NAME list = RECORD {first: INT, rest: NAME list},
  |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   IfExp(
  |   |   | (INT,
  |   |   |   OpExp(EqOp,
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   VarExp(
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   SimpleVar(a)))),
  |   |   |   | (NIL,
  |   |   |   |   NilExp))),
  |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   VarExp(
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   SimpleVar(b)))),
  |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   IfExp(
  |   |   |   | (INT,
  |   |   |   |   OpExp(EqOp,
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   VarExp(
  |   |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   SimpleVar(b)))),
  |   |   |   |   | (NIL,
  |   |   |   |   |   NilExp))),
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   VarExp(
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   SimpleVar(a)))),
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   IfExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   OpExp(LtOp,
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   FieldVar(
  |   |   |   |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   SimpleVar(a)),
  |   |   |   |   |   |   |   | first)))),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   FieldVar(
  |   |   |   |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   SimpleVar(b)),
  |   |   |   |   |   |   |   | first)))))),
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   RecordExp([
  |   |   |   |   |   | (first,
  |   |   |   |   |   |   (INT,
  |   |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   |   (INT,
  |   |   |   |   |   |   |   | FieldVar(
  |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   | SimpleVar(a)),
  |   |   |   |   |   |   |   |   first))))),
  |   |   |   |   |   | (rest,
  |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   | CallExp(merge,[
  |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   | FieldVar(
  |   |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   |   | SimpleVar(a)),
  |   |   |   |   |   |   |   |   |   rest)))),
  |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   | SimpleVar(b))))])))])),
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   RecordExp([
  |   |   |   |   |   | (first,
  |   |   |   |   |   |   (INT,
  |   |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   |   (INT,
  |   |   |   |   |   |   |   | FieldVar(
  |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   | SimpleVar(b)),
  |   |   |   |   |   |   |   |   first))))),
  |   |   |   |   |   | (rest,
  |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   | CallExp(merge,[
  |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   | SimpleVar(a)))),
  |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   | VarExp(
  |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   | FieldVar(
  |   |   |   |   |   |   |   |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   |   |   | SimpleVar(b)),
  |   |   |   |   |   |   |   |   |   rest))))])))]))))))))),
  |   (printint,[
  |   | (i,true)],
  |   | VOID,
  |   | (VOID,
  |   |   LetExp([
  |   |   | FunctionDec[
  |   |   |   (f,[
  |   |   |   | (i,true)],
  |   |   |   | VOID,
  |   |   |   | (VOID,
  |   |   |   |   IfExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   OpExp(GtOp,
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   IntExp(0)))),
  |   |   |   |   | (VOID,
  |   |   |   |   |   SeqExp[
  |   |   |   |   |   | (VOID,
  |   |   |   |   |   |   CallExp(f,[
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   OpExp(DivideOp,
  |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   IntExp(10))))])),
  |   |   |   |   |   | (VOID,
  |   |   |   |   |   |   CallExp(print,[
  |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   CallExp(chr,[
  |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   OpExp(PlusOp,
  |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   OpExp(MinusOp,
  |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   OpExp(TimesOp,
  |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   OpExp(DivideOp,
  |   |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   |   IntExp(10)))),
  |   |   |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   |   |   IntExp(10)))))),
  |   |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   |   CallExp(ord,[
  |   |   |   |   |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   |   |   |   |   StringExp("0"))]))))]))]))]))))]],
  |   |   | (VOID,
  |   |   |   IfExp(
  |   |   |   | (INT,
  |   |   |   |   OpExp(LtOp,
  |   |   |   |   | (INT,
  |   |   |   |   |   VarExp(
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   | (INT,
  |   |   |   |   |   IntExp(0)))),
  |   |   |   | (VOID,
  |   |   |   |   SeqExp[
  |   |   |   |   | (VOID,
  |   |   |   |   |   CallExp(print,[
  |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   StringExp("-"))])),
  |   |   |   |   | (VOID,
  |   |   |   |   |   CallExp(f,[
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   OpExp(MinusOp,
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   IntExp(0)),
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   |   SimpleVar(i))))))]))]),
  |   |   |   | (VOID,
  |   |   |   |   IfExp(
  |   |   |   |   | (INT,
  |   |   |   |   |   OpExp(GtOp,
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   SimpleVar(i)))),
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   IntExp(0)))),
  |   |   |   |   | (VOID,
  |   |   |   |   |   CallExp(f,[
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   VarExp(
  |   |   |   |   |   |   | (INT,
  |   |   |   |   |   |   |   SimpleVar(i))))])),
  |   |   |   |   | (VOID,
  |   |   |   |   |   CallExp(print,[
  |   |   |   |   |   | (STRING,
  |   |   |   |   |   |   StringExp("0"))]))))))))),
  |   (printlist,[
  |   | (l,true)],
  |   | VOID,
  |   | (VOID,
  |   |   IfExp(
  |   |   | (INT,
  |   |   |   OpExp(EqOp,
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   VarExp(
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   SimpleVar(l)))),
  |   |   |   | (NIL,
  |   |   |   |   NilExp))),
  |   |   | (VOID,
  |   |   |   CallExp(print,[
  |   |   |   | (STRING,
  |   |   |   |   StringExp("\n"))])),
  |   |   | (VOID,
  |   |   |   SeqExp[
  |   |   |   | (VOID,
  |   |   |   |   CallExp(printint,[
  |   |   |   |   | (INT,
  |   |   |   |   |   VarExp(
  |   |   |   |   |   | (INT,
  |   |   |   |   |   |   FieldVar(
  |   |   |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   SimpleVar(l)),
  |   |   |   |   |   |   | first))))])),
  |   |   |   | (VOID,
  |   |   |   |   CallExp(print,[
  |   |   |   |   | (STRING,
  |   |   |   |   |   StringExp(" "))])),
  |   |   |   | (VOID,
  |   |   |   |   CallExp(printlist,[
  |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   VarExp(
  |   |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   FieldVar(
  |   |   |   |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   |   |   |   SimpleVar(l)),
  |   |   |   |   |   |   | rest))))]))]))))],
  | VarDec(list1,true,NAME list = RECORD {first: INT, rest: NAME list},
  |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   | CallExp(readlist,[]))),
  | VarDec(list2,true,NAME list = RECORD {first: INT, rest: NAME list},
  |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   | SeqExp[
  |   |   (VOID,
  |   |   | AssignExp(
  |   |   |   (STRING,
  |   |   |   | SimpleVar(buffer)),
  |   |   |   (STRING,
  |   |   |   | CallExp(getchar,[])))),
  |   |   (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   | CallExp(readlist,[]))]))],
  | (VOID,
  |   CallExp(printlist,[
  |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   CallExp(merge,[
  |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   VarExp(
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   SimpleVar(list1)))),
  |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   VarExp(
  |   |   |   | (NAME list = RECORD {first: INT, rest: NAME list},
  |   |   |   |   SimpleVar(list2))))]))]))))
